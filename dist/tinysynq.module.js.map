{"version":3,"file":"tinysynq.module.js","sources":["../src/lib/tinysynq.class.ts","../src/lib/index.ts","../src/lib/env.ts","../src/lib/server.ts","../src/index.ts"],"sourcesContent":["import DB from 'better-sqlite3'\nimport { TinySynqSync, TinySynqOptions } from '@bspeckco/tinysynq-lib';\n\n/**\n * The main class for managing SQLite3 synchronisation.\n * \n * @remarks\n * Expects SQLite3 version \\>=3.45.1\n * \n * @public\n */\nexport class TinySynq extends TinySynqSync {\n\n  /**\n   * Configure new TinySynq instance.\n   * \n   * @param opts - Configuration options\n   */\n  constructor(opts: TinySynqOptions) {\n    super(opts);\n    if (!opts.filePath && !opts.sqlite3) {\n      throw new Error('No DB filePath or connection provided');\n    }\n\n    if (!this.db) {\n      this._db = new DB(this.dbPath);\n      this.db.pragma('journal_mode = WAL');\n    }\n  }\n}\n","import { Logger } from \"tslog\";\nimport { TinySynq } from \"./tinysynq.class.js\";\nimport {\n  createInternalTablesSync,\n  setupTriggersForTableSync,\n  TinySynqOptions,\n} from \"@bspeckco/tinysynq-lib\";\n\n/**\n * Returns a configured instance of TinySynq\n * \n * @param config - Configuration object \n * @returns TinySynq instance\n * \n * @public\n */\nconst initTinySynq = (config: TinySynqOptions) => {\n  const {\n    tables,\n    preInit,\n    postInit,\n    logOptions,\n    debug,\n  } = config;\n\n  if (!tables?.length) throw new Error('Syncable table data required');\n\n  const log = new Logger({ name: 'tinysync-setup', ...logOptions});\n  const ts = new TinySynq(config);\n\n\n  createInternalTablesSync({ ts });\n\n  // Enable debug mode\n  if (debug) ts.enableDebug();\n\n  // Set the device ID\n  ts.setDeviceId();\n\n  // Run pre-initialisation queries\n  if (preInit?.length) {\n    for (const preInitQuery of preInit) {\n      try {\n        log.debug(`\\n@@@ preInit\\n${preInitQuery}\\n@@@`)\n        ts.run({\n          sql: preInitQuery\n        });\n      }\n      catch(err) {\n        log.error('@preInit', err)\n      }\n    }\n  }\n\n  log.debug(`@${ts.synqPrefix}_meta`, ts.runQuery({sql:`SELECT * FROM pragma_table_info('${ts.synqPrefix}_meta')`}));\n  log.debug(`@SIMPLE_SELECT`, ts.runQuery({sql:`SELECT '@@@ that was easy @@@'`}));\n\n  for (const table of tables) {\n    // Check table exists\n    const exists = ts.runQuery<Record<string, any>>({\n      sql: `SELECT * FROM pragma_table_info('${table.name}')`\n    });\n    if (!exists?.length) throw new Error(`${table.name} doesn't exist`);\n    \n    log.debug('Setting up', table.name, table.id);\n\n    setupTriggersForTableSync({ table, ts });\n  }\n  \n  ts.tablesReady();\n\n  if (postInit?.length) {\n    for (const postInitQuery of postInit) {\n      log.warn(`@@@\\npostInit\\n${postInitQuery}\\n@@@`)\n      const result = ts.run({\n        sql: postInitQuery\n      });\n      log.trace(`@@@ postInit RESULT\\n`, result);\n    }\n  }\n\n  return ts;\n};\n\nexport default initTinySynq;\n","import 'dotenv/config'\n\ntype TinySynqEnv = typeof process.env & {\n  TINYSYNQ_WS_HOST: number;\n  TINYSYNQ_WS_PORT: number;\n  TINYSYNQ_HTTP_HOST: number;\n  TINYSYNQ_HTTP_PORT: number;\n  TINYSYNQ_LOG_LEVEL: number;\n  TINYSYNQ_LOG_FORMAT: \"json\" | \"pretty\" | \"hidden\";\n};\n\nexport const env = process.env as TinySynqEnv;","import { env } from './env.js';\nimport * as uWS from 'uWebSockets.js';\nimport { threadId } from 'worker_threads';\nimport { TinySynq } from './tinysynq.class.js';\nimport { Change, LogLevel, SyncRequestType, SyncResponseType } from '@bspeckco/tinysynq-lib';\nimport { ILogObj, ISettingsParam, Logger } from 'tslog';\n\ninterface TSTemplatedApp extends uWS.TemplatedApp {\n  ts: TinySynq;\n  log: Logger<ILogObj>;\n  auth?: (req: uWS.HttpRequest) => Promise<boolean | Record<string, any>>;\n}\n\nexport type SocketRequestType = 'push' | 'pull'\n\nexport interface TSServerParams {\n  ts: TinySynq,\n  port?: number;\n  logOptions: ISettingsParam<ILogObj>;\n  auth?: (req: uWS.HttpRequest) => Promise<boolean | Record<string, any>>;\n}\n\nexport interface TSSocketRequestParams {\n  changes?: Change[];\n  requestId?: string;\n  source?: string;\n  type: SocketRequestType;\n  since: string;            // datetime of last change\n  checkpoint: number;       // ID of last change\n}\n\nlet server;\n\nfunction arrayBufferToString(arrBuff: ArrayBuffer): string {\n  return Buffer.from(arrBuff).toString();\n} \n\nconst app = uWS.App() as TSTemplatedApp;\n\napp.ws('/*', {\n  compression: uWS.SHARED_COMPRESSOR,\n  maxPayloadLength: 16 * 1024 * 1024, // 16MB\n  idleTimeout: 120,\n  sendPingsAutomatically: true,\n  upgrade: async (res, req, context) => {\n    const secWebSocketKey = req.getHeader('sec-websocket-key');\n    const secWebSocketProtocol = req.getHeader('sec-websocket-protocol');\n    const secWebSocketExtensions = req.getHeader('sec-websocket-extensions');\n    const remoteAddress = arrayBufferToString(res.getRemoteAddressAsText());\n\n    let userData: Record<string, any> = { remoteAddress }; // Include remote address in userData by default\n\n    try {\n      if (app.auth) {\n        app.log.debug(`Performing auth for ${remoteAddress}`);\n        const authResult = await app.auth(req);\n\n        if (authResult === true) {\n          // Auth successful (simple boolean success)\n          app.log.debug(`Auth successful (true) for ${remoteAddress}`);\n        } else if (typeof authResult === 'object' && authResult !== null) {\n          // Auth successful (with user data)\n          userData = { ...userData, ...authResult }; // Merge auth result object into userData\n          app.log.debug(`Auth successful (object) for ${remoteAddress}`, userData);\n        } else {\n          // Auth failed (includes false, undefined, null, numbers, strings, etc.)\n          app.log.warn(`Auth failed (result was ${JSON.stringify(authResult)}) for ${remoteAddress}`);\n          res.writeStatus('401 Unauthorized').end();\n          return;\n        }\n\n      } else {\n        app.log.trace(`No auth function configured, allowing connection for ${remoteAddress}`);\n      }\n\n      // Upgrade the connection, passing userData\n      res.upgrade(\n        { userData }, // Pass the userData object\n        secWebSocketKey,\n        secWebSocketProtocol,\n        secWebSocketExtensions,\n        context\n      );\n    } catch (err: any) {\n      app.log.error(`Auth error for ${remoteAddress}: ${err.message}`);\n      // Ensure response is ended in case of error during auth\n      // Use writeStatus before end for proper HTTP response\n      res.writeStatus('500 Internal Server Error').end();\n    }\n  },\n  open: ws => {\n    const userData = ws.getUserData(); // Retrieve userData passed from upgrade\n    app.log.warn('@Connected!', userData); // Log userData on connect\n    ws.subscribe('broadcast');\n  },\n  message: (ws, message, isBinary) => {\n    const addr = arrayBufferToString(ws.getRemoteAddressAsText());\n    const messageString = arrayBufferToString(message);\n    const parsed = JSON.parse(messageString) as TSSocketRequestParams;\n    const { requestId } = parsed;\n    app.log.trace('@parsed', parsed);\n    app.log.debug('@Message!', parsed.changes, app.ts.deviceId);\n    try {\n      switch(parsed.type) {\n        case SyncRequestType.push:\n          if (!parsed.source) {\n            app.log.error('INVALID_SOURCE', {parsed});\n            throw new Error('Invalid source');\n          }  \n          const incoming = parsed.changes?.map((c: any) => {\n            c.source = parsed.source;\n            delete c.mod;\n            return c as Change;\n          }) || [];\n          app.log.debug('\\n<<<< INCOMING >>>>\\n', incoming);\n          app.ts.applyChangesToLocalDB({changes: incoming});\n          ws.send(JSON.stringify({type: SyncResponseType.ack, requestId}));\n          ws.publish('broadcast', JSON.stringify({changes: incoming}), false);\n          break;\n        case SyncRequestType.pull:\n          // @TODO: Eh? Didn't I work this out already?\n          const params = { ...parsed } as any;\n          delete params?.type;\n          const changes = app.ts.getFilteredChanges(parsed);\n          app.log.debug('@pull: outgoing:', changes);\n          ws.send(JSON.stringify({type: SyncResponseType.ack, requestId, changes}));\n          break;\n        default:\n          throw new Error(`Invalid request type: '${parsed.type}'`);\n      }\n      \n    }\n    catch(err: any) {\n      app.log.error(err, {addr, for: JSON.stringify(parsed)});\n      ws.send(JSON.stringify({\n        type: SyncResponseType.nack,\n        requestId: parsed.requestId,\n        message: err.message\n      }));\n    }\n  },\n});\n\n// Define the return type for the start function\nexport interface TinySynqServerControl {\n  app: TSTemplatedApp;\n  close: () => void;\n}\n\nexport const startTinySynqServer = (params: TSServerParams): TinySynqServerControl => {\n  let listenSocket: uWS.us_listen_socket | null = null;\n  const port = params.port || Number(env.TINYSYNQ_WS_PORT) || 7174;\n  app.ts = params.ts;\n  app.auth = params.auth;\n  app.log = new Logger({\n    name:'tinysynq-node-ws',\n    minLevel: params.logOptions.minLevel || Number(env.TINYSYNQ_LOG_LEVEL) || LogLevel.Info,\n    type: env.TINYSYNQ_LOG_FORMAT || 'json',\n    ...(params.logOptions || {})\n  });\n\n  app.listen(port, socket => {\n    listenSocket = socket; // Store the socket\n    if (listenSocket) {\n      app.log.info(`TinySynq server listening on port ${port} from thread ${threadId}`);\n    } else {\n      app.log.error(`Failed to listen on port ${port} from thread ${threadId}`);\n    }\n  });\n\n  // Return the app instance and a close function\n  return {\n    app,\n    close: () => {\n      if (listenSocket) {\n        app.log.info(`Closing server socket on port ${port}`);\n        uWS.us_listen_socket_close(listenSocket);\n        listenSocket = null; // Prevent double closing\n      } else {\n        app.log.warn(`Attempted to close server, but socket was not listening or already closed.`);\n      }\n    }\n  };\n}\n","import lib from './lib/index.js';\nimport { startTinySynqServer } from './lib/server.js';\n\nexport default { startTinySynqServer, initTinySynq: lib };\n\nexport type { \n  BetterSqlite3Instance,\n} from './lib/types.js';\n\nexport type {\n  SyncableTable,\n  TinySynqOptions,\n  GetTableIdColumnParams,\n  Change,\n  QueryParams,\n} from '@bspeckco/tinysynq-lib';\n\nexport type {\n  TinySynq,\n} from './lib/tinysynq.class.js';\n"],"names":["TinySynq","TinySynqSync","constructor","opts","filePath","sqlite3","Error","db","_db","DB","dbPath","pragma","initTinySynq","config","tables","preInit","postInit","logOptions","debug","length","log","Logger","name","ts","createInternalTablesSync","enableDebug","setDeviceId","preInitQuery","run","sql","err","error","synqPrefix","runQuery","table","exists","id","setupTriggersForTableSync","tablesReady","postInitQuery","warn","result","trace","env","process","arrayBufferToString","arrBuff","Buffer","from","toString","app","uWS","App","ws","compression","SHARED_COMPRESSOR","maxPayloadLength","idleTimeout","sendPingsAutomatically","upgrade","res","req","context","secWebSocketKey","getHeader","secWebSocketProtocol","secWebSocketExtensions","remoteAddress","getRemoteAddressAsText","userData","auth","authResult","JSON","stringify","writeStatus","end","message","open","getUserData","subscribe","isBinary","_parsed$changes","addr","messageString","parsed","parse","requestId","changes","deviceId","type","SyncRequestType","push","source","incoming","map","c","mod","applyChangesToLocalDB","send","SyncResponseType","ack","publish","pull","params","getFilteredChanges","for","nack","startTinySynqServer","listenSocket","port","Number","TINYSYNQ_WS_PORT","minLevel","TINYSYNQ_LOG_LEVEL","LogLevel","Info","TINYSYNQ_LOG_FORMAT","listen","socket","info","threadId","close","us_listen_socket_close","lib"],"mappings":"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"}